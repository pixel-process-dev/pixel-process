{"title":"Data Visualization Basics","markdown":{"yaml":{"title":"Data Visualization Basics","navtitle":"Data Viz Basics","subtitle":"Overview of visualization tools and common plots","description":"Core visualization libraries and plot types.","slug":"data-viz-basics","tags":["data-visualization","matplotlib","seaborn","plotly"]},"headingText":"Data Visualization in Python","containsRefs":false,"markdown":"\n\n\nData visualization is essential for exploring data, identifying patterns, and communicating insights. Python offers a rich ecosystem of libraries for creating everything from basic charts to interactive dashboards.\n\nSee the associated [companion notebook](/foundations/data-viz/data-viz-basics-nb.ipynb) for more extensive code examples.\n\n### Why Visualization Matters\n\n- **Exploration**: Understand the shape and distribution of your data.\n\n- **Communication**: Present insights effectively to different audiences.\n\n- **Validation**: Check model assumptions and evaluate results.\n\n## Core Libraries\n\nThree essential libraries for Python visualization are:\n\n- **Matplotlib**: The foundational plotting library.\n\n- **Seaborn**: Simplifies statistical plots with attractive defaults.\n\n- **Plotly**: For interactive and web-ready graphics.\n\n### Matplotlib\n\n[Matplotlib](https://matplotlib.org/) is the foundational plotting library in Python, supporting a wide range of static, animated, and interactive visualizations.\n\n### Seaborn\n\n[Seaborn](https://seaborn.pydata.org/) is built on Matplotlib and provides a high-level API for creating attractive statistical graphics.\n\n### Plotly\n\n[Plotly](https://plotly.com/) creates interactive plots ideal for dashboards and web applications.\n\n## Common Plot Types\n\nBelow are essential plots for data analysis. Each section includes data requirements, ideal use cases, examples for multiple Python libraries, and an example image.\n\n### Histogram\n\nHistograms display the distribution of a dataset.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Univariate\n- **Variables**:\n  - Single continuous variable\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\ndata = np.random.randn(1000)\nplt.hist(data, bins=30)\nplt.show()\n```\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('tips')\nsns.histplot(data['total_bill'], bins=30)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ndf = px.data.tips()\nfig = px.histogram(df, x='total_bill')\nfig.show()\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Visualize data distribution\n- Identify skewness and outliers\n\n</div>\n\n:::\n\n### Bar Chart\n\nBar charts represent categorical data with rectangular bars.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Univariate or Bivariate\n- **Variables**:\n  - x: Categorical\n  - y: Continuous\n- Suitable for counts or aggregated values.\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\n\n```python\nimport matplotlib.pyplot as plt\ncategories = ['A','B','C']\nvalues = [3,7,5]\nplt.bar(categories, values)\nplt.show()\n```\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('tips')\nsns.barplot(x='day', y='total_bill', data=data)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ncategories = ['A','B','C']\nvalues = [3,7,5]\nfig = px.bar(x=categories, y=values)\nfig.show()\n\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Compare categories\n- Show frequency or aggregated values\n- Identify highest and lowest categories\n\n</div>\n\n:::\n\n### Box Plot\n\nBox plots summarize data with median, quartiles, and outliers.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Univariate or Bivariate\n- **Variables**:\n  - x: Categorical (optional)\n  - y: Continuous\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\n\n```python\nimport matplotlib.pyplot as plt\ndata = [7,8,5,6,4,9]\nplt.boxplot(data)\nplt.show()\n```\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('tips')\nsns.boxplot(x='day', y='total_bill', data=data)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ndf = px.data.tips()\nfig = px.box(df, x='day', y='total_bill')\nfig.show()\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Identify outliers\n- Compare distributions across groups\n\n</div>\n\n:::\n\n### Violin Plot\n\nViolin plots combine box plots with kernel density estimates.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Bivariate\n- **Variables**:\n  - x: Categorical\n  - y: Continuous\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\nMatplotlib does not have built-in violin plot\n\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('tips')\nsns.violinplot(x='day', y='total_bill', data=data)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ndf = px.data.tips()\nfig = px.violin(df, x='day', y='total_bill', box=True)\nfig.show()\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Visualize distribution and density\n- Compare across categories\n\n</div>\n\n:::\n\n### Scatter Plot\n\nScatter plots show the relationship between two variables.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Bivariate\n- **Variables**:\n  - x: Continuous\n  - y: Continuous\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\n\n```python\npython\nimport matplotlib.pyplot as plt\nx = [1,2,3,4,5]\ny = [5,4,6,5,7]\nplt.scatter(x,y)\nplt.show()\n\n```\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('iris')\nsns.scatterplot(x='sepal_length', y='petal_length', data=data)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ncategories = ['A','B','C']\nvalues = [3,7,5]\nfig = px.scatter(tips, x='total_bill', y='tip')\nfig.show()\n\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Identify correlations\n- Detect clusters or outliers\n\n</div>\n\n:::\n","srcMarkdownNoYaml":"\n\n## Data Visualization in Python\n\nData visualization is essential for exploring data, identifying patterns, and communicating insights. Python offers a rich ecosystem of libraries for creating everything from basic charts to interactive dashboards.\n\nSee the associated [companion notebook](/foundations/data-viz/data-viz-basics-nb.ipynb) for more extensive code examples.\n\n### Why Visualization Matters\n\n- **Exploration**: Understand the shape and distribution of your data.\n\n- **Communication**: Present insights effectively to different audiences.\n\n- **Validation**: Check model assumptions and evaluate results.\n\n## Core Libraries\n\nThree essential libraries for Python visualization are:\n\n- **Matplotlib**: The foundational plotting library.\n\n- **Seaborn**: Simplifies statistical plots with attractive defaults.\n\n- **Plotly**: For interactive and web-ready graphics.\n\n### Matplotlib\n\n[Matplotlib](https://matplotlib.org/) is the foundational plotting library in Python, supporting a wide range of static, animated, and interactive visualizations.\n\n### Seaborn\n\n[Seaborn](https://seaborn.pydata.org/) is built on Matplotlib and provides a high-level API for creating attractive statistical graphics.\n\n### Plotly\n\n[Plotly](https://plotly.com/) creates interactive plots ideal for dashboards and web applications.\n\n## Common Plot Types\n\nBelow are essential plots for data analysis. Each section includes data requirements, ideal use cases, examples for multiple Python libraries, and an example image.\n\n### Histogram\n\nHistograms display the distribution of a dataset.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Univariate\n- **Variables**:\n  - Single continuous variable\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\ndata = np.random.randn(1000)\nplt.hist(data, bins=30)\nplt.show()\n```\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('tips')\nsns.histplot(data['total_bill'], bins=30)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ndf = px.data.tips()\nfig = px.histogram(df, x='total_bill')\nfig.show()\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Visualize data distribution\n- Identify skewness and outliers\n\n</div>\n\n:::\n\n### Bar Chart\n\nBar charts represent categorical data with rectangular bars.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Univariate or Bivariate\n- **Variables**:\n  - x: Categorical\n  - y: Continuous\n- Suitable for counts or aggregated values.\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\n\n```python\nimport matplotlib.pyplot as plt\ncategories = ['A','B','C']\nvalues = [3,7,5]\nplt.bar(categories, values)\nplt.show()\n```\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('tips')\nsns.barplot(x='day', y='total_bill', data=data)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ncategories = ['A','B','C']\nvalues = [3,7,5]\nfig = px.bar(x=categories, y=values)\nfig.show()\n\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Compare categories\n- Show frequency or aggregated values\n- Identify highest and lowest categories\n\n</div>\n\n:::\n\n### Box Plot\n\nBox plots summarize data with median, quartiles, and outliers.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Univariate or Bivariate\n- **Variables**:\n  - x: Categorical (optional)\n  - y: Continuous\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\n\n```python\nimport matplotlib.pyplot as plt\ndata = [7,8,5,6,4,9]\nplt.boxplot(data)\nplt.show()\n```\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('tips')\nsns.boxplot(x='day', y='total_bill', data=data)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ndf = px.data.tips()\nfig = px.box(df, x='day', y='total_bill')\nfig.show()\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Identify outliers\n- Compare distributions across groups\n\n</div>\n\n:::\n\n### Violin Plot\n\nViolin plots combine box plots with kernel density estimates.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Bivariate\n- **Variables**:\n  - x: Categorical\n  - y: Continuous\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\nMatplotlib does not have built-in violin plot\n\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('tips')\nsns.violinplot(x='day', y='total_bill', data=data)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ndf = px.data.tips()\nfig = px.violin(df, x='day', y='total_bill', box=True)\nfig.show()\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Visualize distribution and density\n- Compare across categories\n\n</div>\n\n:::\n\n### Scatter Plot\n\nScatter plots show the relationship between two variables.\n\n::: {.panel-tabset}\n\n## Data Requirements\n<div class=\"tab-card static-tab\">\n- **Type**: Bivariate\n- **Variables**:\n  - x: Continuous\n  - y: Continuous\n\n</div>\n\n## Package Examples\n<details class=\"\">\n<summary>Matplotlib</summary>\n\n```python\npython\nimport matplotlib.pyplot as plt\nx = [1,2,3,4,5]\ny = [5,4,6,5,7]\nplt.scatter(x,y)\nplt.show()\n\n```\n</details>\n\n<details class=\"\">\n<summary>Seaborn</summary>\n\n```python\nimport seaborn as sns\ndata = sns.load_dataset('iris')\nsns.scatterplot(x='sepal_length', y='petal_length', data=data)\n```\n</details>\n\n<details class=\"\">\n<summary>Plotly</summary>\n\n```python\nimport plotly.express as px\ncategories = ['A','B','C']\nvalues = [3,7,5]\nfig = px.scatter(tips, x='total_bill', y='tip')\nfig.show()\n\n```\n</details>\n\n## Ideal Uses\n<div class=\"tab-card static-tab\">\n- Identify correlations\n- Detect clusters or outliers\n\n</div>\n\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../assets/css/tokens.css","../../assets/css/themes.css","../../assets/css/body-bg.css","../../assets/css/navbar.css","../../assets/css/sidebar.css","../../assets/css/toc.css","../../assets/css/links.css","../../assets/css/headers.css","../../assets/css/footer.css","../../assets/css/title-block.css","../../assets/css/code-blocks.css","../../assets/css/code-blocks-interactive.css","../../assets/css/custom-callouts.css","../../assets/css/category-grid.css","../../assets/css/tab-cards.css","../../assets/css/flipbook.css","../../assets/css/tables.css","../../assets/css/faqs.css","../../assets/css/buttons.css","../../assets/css/quick-links.css","../../assets/css/branding.css"],"include-after-body":["../../assets/html/wip-footer.html","../../assets/html/custom-footer.html"],"toc":true,"output-file":"data-viz-basics.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":{"light":"flatly","dark":"darkly"},"google-fonts":["Inter"],"page-layout":"full","code-copy":true,"title-block-banner":true,"plotly":true,"sidebar":"foundations","title":"Data Visualization Basics","navtitle":"Data Viz Basics","subtitle":"Overview of visualization tools and common plots","description":"Core visualization libraries and plot types.","slug":"data-viz-basics","tags":["data-visualization","matplotlib","seaborn","plotly"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}