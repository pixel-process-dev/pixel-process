{"title":"Image Basics","markdown":{"yaml":{"title":"Image Basics","navtitle":"Image Basics (NB)","subtitle":"Introducation to Image Processing","description":"Overview of image properties and their manipulation.","format":{"html":{"page-layout":"full","title-block-banner":true}}},"headingText":"Meet Pixpix","containsRefs":false,"markdown":"\n\nNotebook goals:\n\n\n- Exploration of image properties, focused on understanding pixels\n- Introduce Pillow and numpy image processing\n- Understand how many data points create an image\n\nNote: PIL is better for working with image data in many cases, however the use of np arrays can faciiliate querying the data and understanding what makes an image.\n\n\nThis little pixie contains over 4 million values! \n\nWe'll load the image and begin exploring the properties the create this \"simple\" image.\n\n### Load Image into Multiple Formats\n\nVariable names will indicate the data format, and numeric values the steps along the way.\n\nRemember the type command in Python can always confirm the data type.\n\n### Create an Array Version\n\n## Image Properties\n\nLet's see what data exists for Pixpix in these two formats.\n\n### Numpy Array\n\n[Shape](https://numpy.org/doc/stable/reference/generated/numpy.shape.html) provides the number of dimensions and element count for each.\n\nThis image consists of a 1024x1024 pixel grid, with 4 values per pixel. \n\nArrays dimensions and elements can be selected with `[]` notation. \n\nFor long arrays, the head and tail will be shown.\n\nAlso note, a shape and data type is shown for each.\n\n### Chained Indexing\n\nIndexing can be used to create new subset arrays, to assign values, or chained to drill down into data.\n\n### Subset Arrays\n\nThis is functionally equivalent to the above.\n\nNot the proper approach depends on goals.\n\n### PIL Image\n\nThe img_0 stores the same pixel information, but in a different format.\n\nSee the [PIL Docs](https://pillow.readthedocs.io/en/stable) for more details!\n\nHere we see that the image is a png, matching the input file type.\n\nThe mode is red, green, blue, alpha (RGBA). These are the 4 values that define each pixel-more on this later. \n\nThe pixel grid is 1024x1024, meaning over a million total pixels.\n\n## Reducing Complexity\n\n- Create a greyscale version\n- Drop pixels\n- Filter values\n\n#### Convert to Array\n\nShow with plt.imshow\n\nWhy isn't the image in greyscale? \n\nBy default, imshow does not use a greyscale to map values.\n\nBelow we see how the colors map and then apply the proper color scale.\n\n#### 25% Less Data\n\nLet's inspect how this transformation changed the data.\n\nWe'll compare arr_0 (original) and arr_1 (greyscale). \n\n### Color Channel Manipulation\n\nThe original image is in RGBA, providing 4 values/pixel.\n\nRed, Green, Blue, and Alpha.\n\nAlpha controls transparency.\n\n#### Remove Alpha\n\n#### Without alpha to control transparency, all RGB colors are solid\n\n# Image Basics Review\n\n- Loaded an image\n  - PIL and Numpy formats\n  - Checked data structure, pixel grid, and pixel components\n- Explored how RGBA channels work\n  - Created a greyscale version (75% data reduction!)\n  - Removed alpha to convert image to RGB\n  - Plotted image with each channel isolated and maxed out\n- **Bonuses**:\n  - Created fancy subplots\n  - Figured out Pixpix is much more complicated than at first glance\n","srcMarkdownNoYaml":"\n\nNotebook goals:\n\n\n- Exploration of image properties, focused on understanding pixels\n- Introduce Pillow and numpy image processing\n- Understand how many data points create an image\n\nNote: PIL is better for working with image data in many cases, however the use of np arrays can faciiliate querying the data and understanding what makes an image.\n\n## Meet Pixpix\n\nThis little pixie contains over 4 million values! \n\nWe'll load the image and begin exploring the properties the create this \"simple\" image.\n\n### Load Image into Multiple Formats\n\nVariable names will indicate the data format, and numeric values the steps along the way.\n\nRemember the type command in Python can always confirm the data type.\n\n### Create an Array Version\n\n## Image Properties\n\nLet's see what data exists for Pixpix in these two formats.\n\n### Numpy Array\n\n[Shape](https://numpy.org/doc/stable/reference/generated/numpy.shape.html) provides the number of dimensions and element count for each.\n\nThis image consists of a 1024x1024 pixel grid, with 4 values per pixel. \n\nArrays dimensions and elements can be selected with `[]` notation. \n\nFor long arrays, the head and tail will be shown.\n\nAlso note, a shape and data type is shown for each.\n\n### Chained Indexing\n\nIndexing can be used to create new subset arrays, to assign values, or chained to drill down into data.\n\n### Subset Arrays\n\nThis is functionally equivalent to the above.\n\nNot the proper approach depends on goals.\n\n### PIL Image\n\nThe img_0 stores the same pixel information, but in a different format.\n\nSee the [PIL Docs](https://pillow.readthedocs.io/en/stable) for more details!\n\nHere we see that the image is a png, matching the input file type.\n\nThe mode is red, green, blue, alpha (RGBA). These are the 4 values that define each pixel-more on this later. \n\nThe pixel grid is 1024x1024, meaning over a million total pixels.\n\n## Reducing Complexity\n\n- Create a greyscale version\n- Drop pixels\n- Filter values\n\n#### Convert to Array\n\nShow with plt.imshow\n\nWhy isn't the image in greyscale? \n\nBy default, imshow does not use a greyscale to map values.\n\nBelow we see how the colors map and then apply the proper color scale.\n\n#### 25% Less Data\n\nLet's inspect how this transformation changed the data.\n\nWe'll compare arr_0 (original) and arr_1 (greyscale). \n\n### Color Channel Manipulation\n\nThe original image is in RGBA, providing 4 values/pixel.\n\nRed, Green, Blue, and Alpha.\n\nAlpha controls transparency.\n\n#### Remove Alpha\n\n#### Without alpha to control transparency, all RGB colors are solid\n\n# Image Basics Review\n\n- Loaded an image\n  - PIL and Numpy formats\n  - Checked data structure, pixel grid, and pixel components\n- Explored how RGBA channels work\n  - Created a greyscale version (75% data reduction!)\n  - Removed alpha to convert image to RGB\n  - Plotted image with each channel isolated and maxed out\n- **Bonuses**:\n  - Created fancy subplots\n  - Figured out Pixpix is much more complicated than at first glance\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../assets/css/tokens.css","../../assets/css/themes.css","../../assets/css/body-bg.css","../../assets/css/navbar.css","../../assets/css/sidebar.css","../../assets/css/toc.css","../../assets/css/links.css","../../assets/css/headers.css","../../assets/css/footer.css","../../assets/css/title-block.css","../../assets/css/code-blocks.css","../../assets/css/code-blocks-interactive.css","../../assets/css/custom-callouts.css","../../assets/css/category-grid.css","../../assets/css/tab-cards.css","../../assets/css/flipbook.css","../../assets/css/tables.css","../../assets/css/faqs.css","../../assets/css/buttons.css","../../assets/css/quick-links.css","../../assets/css/branding.css"],"include-after-body":["../../assets/html/wip-footer.html","../../assets/html/custom-footer.html"],"toc":true,"output-file":"image-basics.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":{"light":"flatly","dark":"darkly"},"google-fonts":["Inter"],"page-layout":"full","code-copy":true,"title-block-banner":true,"plotly":true,"sidebar":"foundations","title":"Image Basics","navtitle":"Image Basics (NB)","subtitle":"Introducation to Image Processing","description":"Overview of image properties and their manipulation."},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}